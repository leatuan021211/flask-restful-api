{
  "openapi": "3.0.0",
  "info": {
    "title": "Python Flask - RESTful API",
    "description": "This is an example of using OAuth2 Access Code Flow in a specification to describe security to your API.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/LEATUAN0212111/Python-Flask-RESTful-API/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "security": [
    {
      "accessCode": [
        "read",
        "write"
      ]
    }
  ],
  "paths": {
    "/items": {
      "get": {
        "summary": "Get all items",
        "description": "TThis is the function which gets all items.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/item": {
      "post": {
        "summary": "Create a new item",
        "description": "TThis is the function which creates a new item.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemSchema"
              },
              "example": {
                "name": "pen",
                "amount": 10,
                "cost": 5000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/item/{id}": {
      "get": {
        "summary": "Get item",
        "description": "This is the function which gets item by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of item.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/ItemSchema/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": []
      },
      "put": {
        "summary": "Update item",
        "description": "This is the function which updates item by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of item.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/ItemSchema/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Delete item",
        "description": "This is the function which deletes item by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of item.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/ItemSchema/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "ItemSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "format": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "cost": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Example API for requesting and return item requests"
      }
    },
    "securitySchemes": {
      "accessCode": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "http://example.com/oauth/auth",
            "tokenUrl": "http://example.com/oauth/token",
            "scopes": {
              "write": "allows modifying resources",
              "read": "allows reading resources"
            }
          }
        }
      }
    }
  }
}